{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bcfc1503",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importing Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fd1d52e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6799d6c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results for reaching 100:\n",
      "100 100 100\n",
      "Division result: 2.5\n",
      "Constructed word: Hey\n",
      "Constructed sentences:\n",
      "I love Python!\n",
      "Concatenation is fun.\n"
     ]
    }
   ],
   "source": [
    "# 1. Three different ways to reach 100 by adding or subtracting variables\n",
    "a, b, c = 50, 50, 0\n",
    "result1 = a + b + c  # 50 + 50 + 0\n",
    "\n",
    "x, y = 200, 100\n",
    "result2 = x - y  # 200 - 100\n",
    "\n",
    "p, q, r = 70, 30, 100\n",
    "result3 = p + q  # 70 + 30\n",
    "\n",
    "print(\"Results for reaching 100:\")\n",
    "print(result1, result2, result3)\n",
    "\n",
    "# 2. Two floating-point variables and division\n",
    "float1, float2 = 5.5, 2.2\n",
    "division_result = float1 / float2\n",
    "print(\"Division result:\", division_result)\n",
    "\n",
    "# 3. Construct a short word by concatenating strings\n",
    "part1, part2, part3 = \"H\", \"e\", \"y\"\n",
    "word = part1 + part2 + part3\n",
    "print(\"Constructed word:\", word)\n",
    "\n",
    "# 4. Construct two short sentences by concatenating strings\n",
    "sentence1 = \"I \" + \"love \" + \"Python!\"\n",
    "sentence2 = \"Concatenation \" + \"is \" + \"fun.\"\n",
    "print(\"Constructed sentences:\")\n",
    "print(sentence1)\n",
    "print(sentence2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d4cfa704",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
